#!/bin/bash
set -e

confFile=".heureka.conf"

typeset -A config # init array

config=( # set default values in config array
  [env]="Not selected"
  [running]="no"
)

readHeurekaConf() {
  while IFS= read -r line
  do
    if echo $line | grep -F = &>/dev/null
    then
        varname=$(echo "$line" | cut -d '=' -f 1)
        config[$varname]=$(echo "$line" | cut -d '=' -f 2-)
    fi
  done <"$confFile"
}

# $1 = the configuration parameter that has to be changed
# $2 = the new value for the configuration parameter
writeConfig() {
  target="$1"
  value="$2"
  sed -i "s/\($target *= *\).*/\1$value/" $confFile
}

# $1 = the configuration parameter that has to be changed
# $2 = the new value for the configuration parameter
setConfig() {
  writeConfig "$1" "$2"
  readHeurekaConf
}

# Set selected environment to "Not supported", if nothing is running.
setEnvToIdle() {
  # if nothing is running
  if [[ ${config[running]} = "no" ]]; then
    # set environment to "Not selected"
    newEnv="Not selected"
    setConfig "env" "$newEnv"
  fi
}

getEnv() {
  echo "${config[env]}"
}

# Returns a string extending the prompt with context information
# $1 = Highlight color code
# $2 = Second color code
# $3 = Alert color code
# $3 = Default color code
getPromptExt() {
  local cleanEnv="${config[env]// /${1}-${2}}"
  local promptExt=$(echo -e "${2}${cleanEnv}${1}")
  case "${config[running]}" in
    "yes")
        echo -e "$promptExt-${3}UP${4}"
	;;
    "stopped")
        echo -e "$promptExt-${2}STOPPED${4}"
	;;
    "no")
        echo -e "$promptExt-${2}DOWN${4}"
	;;
  esac
}

# $1 = Highlight color code
# $2 = Second color code
# $3 = Default color code
printCurrentConf() {
  echo -e "
${1}Environment:${3} ${2}${config[env]}${3}
${1}Running:${3} ${2}${config[running]}${3}
"
}
