version: "3.9"  # optional since v1.27.0
services:
  arise:
    image: soteto/arise:${ARISE_TAG}
    #build: ./repos/arise
    container_name: arise
    restart: unless-stopped
    networks:
      pool-network:
        ipv4_address: ${ARISE_IP}
  
  drops:
    image: soteto/drops:${DROPS_TAG}
    container_name: drops
    restart: unless-stopped
#    links:
#      - nats
#      - drops-database
    ports:
      - 9000:9000
    volumes:
      - ${DROPS_CONF_PATH}:/opt/docker/conf/application.conf
    networks:
      pool-network:
        ipv4_address: ${DROPS_IP}

  drops-database:
    image: "mariadb:${DROPS_DB_TAG}"
    container_name: drops-database
    restart: unless-stopped
    volumes: 
       - ./.docker-volumes/mode_dev/drops-database/:/var/lib/mysql/
    environment:
      MYSQL_ROOT_PASSWORD: "${DROPS_DB_ROOT_PASS}"
      MYSQL_DATABASE: "${DROPS_DB_NAME}"
      MYSQL_USER: "${DROPS_DB_USER}"
      MYSQL_PASSWORD: "${DROPS_DB_PASS}"
    command:
      - "--character-set-server=utf8mb4"
      - "--collation-server=utf8mb4_unicode_ci"
    networks:
      pool-network:
        ipv4_address: ${DROPS_DB_IP}

  #############
  # Dispenser #
  #############

  dispenser:
    volumes:
      - ${DISPENSER_CONF_PATH}:/opt/docker/conf/application.conf
      - ${DISPENSER_NAVI_PATH}:/opt/docker/conf/navigation/jsons/

  dispenser-database:
    volumes: 
       - ./.docker-volumes/mode_dev/dispenser-database/:/data/db/

  ################
  # Architecture #
  ###############

  nats:
    ports:
      - 4222:4222

  nginx-pool:
    volumes:
      - ${NGINX_POOL_CONF_PATH}:/etc/nginx/conf.d/
    extra_hosts:
      # make 'localhost' ports available in nginx container by using 'host.docker.internal'
      - "host.docker.internal:host-gateway"

